package dp;

import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;

class Platform{
	int leftX;
	int rightX;
	int height;
}
public class Jimmy {
	static int MAX_NUM = 1000; 
	static Platform[] platforms = new Platform[MAX_NUM + 10]; 
	
	public static void main(String[] args){
		Scanner scanner = new Scanner(System.in);
		int testNum = scanner.nextInt();
		for(int t = 0; t < testNum; t++){
			int platformNum = scanner.nextInt();
			Arrays.fill(platforms, new Platform());
			platforms[0] = new Platform();
			platforms[0].leftX = scanner.nextInt();
			platforms[0].rightX = platforms[0].leftX;
			platforms[0].height = scanner.nextInt();
			int maxH = scanner.nextInt();
			for(int i = 1; i <= platformNum; i++){
				platforms[i] = new Platform();
				platforms[i].leftX = scanner.nextInt();
				platforms[i].rightX = scanner.nextInt();
				platforms[i].height = scanner.nextInt();
			}
			Arrays.sort(platforms, new Comparator<Platform>() {
	            public int compare(Platform p1, Platform p2) {
	            	if(p1 != null && p2 != null)
	            		return ((Comparable)p2.height).compareTo(p1.height);
	            	else if(p1 == null)
	            		return 1;     
	            	else
	            		return -1;
	            }
			}); 
			for(int i = 0; i < platforms.length; i++){
				if(platforms[i].height != 0)
					continue;
				System.out.println(platforms[i].height);
			}
			
		}
		
		

		
		
	}
	

}
